{
    "deviceProfile": {
        "name": "MS-AM100-OTAA",
        "macVersion": "1.0.3",
        "regParamsRevision": "",
        "supportsJoin": true,
        "payloadCodec": "CUSTOM_JS",
        "payloadEncoderScript": "",
        "payloadDecoderScript": "/**\n * Payload Decoder for Chirpstack and Milesight network server\n * \n * Copyright 2021 Milesight IoT\n * \n * @product AM104 / AM107\n */\nfunction Decode(fPort, bytes) {\n    var decoded = {};\n\n    for (var i = 0; i < bytes.length;) {\n        var channel_id = bytes[i++];\n        var channel_type = bytes[i++];\n        // BATTERY\n        if (channel_id === 0x01 && channel_type === 0x75) {\n            decoded.battery = bytes[i];\n            i += 1;\n        }\n        // TEMPERATURE\n        else if (channel_id === 0x03 && channel_type === 0x67) {\n            // ℃\n            decoded.temperature = readInt16LE(bytes.slice(i, i + 2)) / 10;\n            i += 2;\n\n            // ℉\n            // decoded.temperature = readInt16LE(bytes.slice(i, i + 2)) / 10 * 1.8 + 32;\n            // i +=2;\n        }\n        // HUMIDITY\n        else if (channel_id === 0x04 && channel_type === 0x68) {\n            decoded.humidity = bytes[i] / 2;\n            i += 1;\n        }\n        // PIR\n        else if (channel_id === 0x05 && channel_type === 0x6A) {\n            decoded.activity = readUInt16LE(bytes.slice(i, i + 2));\n            i += 2;\n        }\n        // LIGHT\n        else if (channel_id === 0x06 && channel_type === 0x65) {\n            decoded.illumination = readUInt16LE(bytes.slice(i, i + 2));\n            decoded.infrared_and_visible = readUInt16LE(bytes.slice(i + 2, i + 4));\n            decoded.infrared = readUInt16LE(bytes.slice(i + 4, i + 6));\n            i += 6;\n        }\n        // CO2\n        else if (channel_id === 0x07 && channel_type === 0x7D) {\n            decoded.co2 = readUInt16LE(bytes.slice(i, i + 2));\n            i += 2;\n        }\n        // TVOC\n        else if (channel_id === 0x08 && channel_type === 0x7D) {\n            decoded.tvoc = readUInt16LE(bytes.slice(i, i + 2));\n            i += 2;\n        }\n        // PRESSURE\n        else if (channel_id === 0x09 && channel_type === 0x73) {\n            decoded.pressure = readUInt16LE(bytes.slice(i, i + 2)) / 10;\n            i += 2;\n        } else {\n            break;\n        }\n    }\n\n    return decoded;\n}\n\n/* ******************************************\n * bytes to number\n ********************************************/\nfunction readUInt16LE(bytes) {\n    var value = (bytes[1] << 8) + bytes[0];\n    return value & 0xffff;\n}\n\nfunction readInt16LE(bytes) {\n    var ref = readUInt16LE(bytes);\n    return ref > 0x7fff ? ref - 0x10000 : ref;\n}"
    }
}
